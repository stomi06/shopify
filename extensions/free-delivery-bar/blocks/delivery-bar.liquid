{% comment %}
  Free Delivery Bar Block
  Ustawienia sÄ… zarzÄ…dzane przez panel aplikacji i zapisane w metafields
{% endcomment %}

{% assign settings = shop.metafields.free_delivery_app.settings.value %}

<style>
  .free-delivery-bar {
    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
    text-align: center;
    padding: 12px 20px;
    position: relative;
    z-index: 1000;
    transition: all 0.3s ease;
    
    /* Podstawowe style z ustawieÅ„ */
    background-color: {{ settings.background_color | default: '#4CAF50' }};
    color: {{ settings.text_color | default: '#ffffff' }};
    font-size: {{ settings.font_size | default: 14 }}px;
    font-weight: {{ settings.font_weight | default: 600 }};
    border-radius: {{ settings.border_radius | default: 6 }}px;
    
    /* PrzezroczystoÅ›Ä‡ */
    {% assign opacity = settings.opacity | default: 100 | divided_by: 100.0 %}
    opacity: {{ opacity }};
    
    /* Ramka */
    {% if settings.border_width and settings.border_width > 0 %}
      border: {{ settings.border_width }}px solid {{ settings.border_color | default: '#cccccc' }};
    {% else %}
      border: none;
    {% endif %}
    
    /* CieÅ„ */
    {% if settings.shadow_blur and settings.shadow_blur > 0 %}
      {% assign shadow_opacity = settings.shadow_opacity | default: 20 | divided_by: 100.0 %}
      {% assign shadow_color = settings.shadow_color | default: '#000000' %}
      {% assign shadow_distance = settings.shadow_distance | default: 2 %}
      {% assign shadow_blur = settings.shadow_blur | default: 4 %}
      box-shadow: 0 {{ shadow_distance }}px {{ shadow_blur }}px {{ shadow_color | append: ', ' | append: shadow_opacity | prepend: 'rgba(' | replace: '#', '' | split: '' | slice: 0, 6 | join: '' | prepend: 'rgba(' | append: ', ' | append: shadow_opacity | append: ')' }};
    {% else %}
      box-shadow: none;
    {% endif %}
    
    /* Pozycja */
    {% if settings.position == 'fixed' %}
      position: fixed;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      width: 90%;
      max-width: 500px;
      min-width: 300px;
    {% else %}
      position: relative;
      margin: 20px auto;
      max-width: 800px;
    {% endif %}
  }
  
  .free-delivery-bar button {
    background: none;
    border: none;
    color: inherit;
    position: absolute;
    top: 8px;
    right: 12px;
    cursor: pointer;
    font-size: 18px;
    padding: 0;
    opacity: 0.8;
    line-height: 1;
  }
  
  .free-delivery-bar button:hover {
    opacity: 1;
  }
  
  .free-delivery-bar.hidden {
    display: none;
  }

  /* Overlay dla position fixed */
  {% if settings.position == 'fixed' %}
  .free-delivery-bar::before {
    content: '';
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: rgba(0, 0, 0, 0.3);
    z-index: -1;
    pointer-events: none;
  }
  {% endif %}
</style>

<div class="free-delivery-bar" 
     id="free-delivery-bar"
     data-threshold="{{ settings.min_amount | default: 199 }}"
     data-message="{{ settings.message | default: 'Darmowa dostawa przy zamÃ³wieniu powyÅ¼ej 199 zÅ‚!' }}"
     data-bg-color="{{ settings.background_color | default: '#4CAF50' }}">
  <span id="delivery-message">
    {% assign message = settings.message | default: "Darmowa dostawa przy zamÃ³wieniu powyÅ¼ej 199 zÅ‚!" %}
    {{ message }}
  </span>
  
  {% if settings.closeable == true %}
    <button id="close-delivery-bar">Ã—</button>
  {% endif %}
</div>

<script>
(function() {
  const deliveryBar = document.getElementById('free-delivery-bar');
  const messageElement = document.getElementById('delivery-message');
  const closeButton = document.getElementById('close-delivery-bar');
  
  if (!deliveryBar) return;
  
  const threshold = parseInt(deliveryBar.getAttribute('data-threshold'));
  const originalMessage = deliveryBar.getAttribute('data-message');
  const bgColor = deliveryBar.getAttribute('data-bg-color');
  
  // SprawdÅº czy pasek byÅ‚ wczeÅ›niej zamkniÄ™ty
  if (localStorage.getItem('deliveryBarClosed') === 'true') {
    deliveryBar.classList.add('hidden');
    return;
  }
  
  // Aktualizuj wiadomoÅ›Ä‡ na podstawie wartoÅ›ci koszyka
  function updateDeliveryMessage() {
    fetch('/cart.js')
      .then(response => response.json())
      .then(cart => {
        const cartTotal = cart.total_price / 100; // Shopify zwraca w groszach
        
        if (cartTotal >= threshold) {
          messageElement.innerHTML = 'ðŸŽ‰ Masz darmowÄ… dostawÄ™!';
          deliveryBar.style.backgroundColor = '#4CAF50';
        } else {
          const remaining = threshold - cartTotal;
          let message = originalMessage;
          
          // ZastÄ…p placeholders
          message = message.replace('{amount}', threshold + ' zÅ‚');
          message = message.replace('{remaining}', remaining.toFixed(2) + ' zÅ‚');
          
          messageElement.innerHTML = message;
          deliveryBar.style.backgroundColor = bgColor;
        }
      })
      .catch(() => {
        // Fallback - pokaÅ¼ domyÅ›lnÄ… wiadomoÅ›Ä‡
        let message = originalMessage.replace('{amount}', threshold + ' zÅ‚');
        messageElement.innerHTML = message;
      });
  }
  
  // ObsÅ‚uga zamkniÄ™cia paska
  if (closeButton) {
    closeButton.addEventListener('click', function() {
      deliveryBar.classList.add('hidden');
      localStorage.setItem('deliveryBarClosed', 'true');
    });
  }
  
  // Zaktualizuj przy zaÅ‚adowaniu strony
  updateDeliveryMessage();
  
  // NasÅ‚uchuj zmian w koszyku
  document.addEventListener('cart:updated', updateDeliveryMessage);
  
})();
</script>

{% schema %}
{
  "name": "Free Delivery Bar",
  "target": "section",
  "settings": [
    {
      "type": "paragraph",
      "content": "Wszystkie ustawienia (wiadomoÅ›Ä‡, kolory, pozycja, style) sÄ… zarzÄ…dzane przez panel aplikacji. Ten blok automatycznie pobiera ustawienia z aplikacji."
    },
    {
      "type": "paragraph", 
      "content": "Aby skonfigurowaÄ‡ pasek, przejdÅº do: Apps â†’ Free Delivery â†’ Ustawienia"
    }
  ]
}
{% endschema %}
