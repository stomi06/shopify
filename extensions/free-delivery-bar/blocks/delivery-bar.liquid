{% comment %}
  Free Delivery Bar Block
  Ustawienia są zarządzane przez panel aplikacji i zapisane w metafields
{% endcomment %}

{% assign settings = shop.metafields.free_delivery_app.settings.value %}

<style>
  .free-delivery-bar {
    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
    text-align: center;
    padding: 12px 20px;
    z-index: 3;
    transition: all 0.3s ease;
    left: 50%;
    transform: translateX(-50%);
    
    /* TŁO - przezroczyste lub kolorowe */
    {% if settings.transparent_bg == true %}
      background-color: transparent;
    {% else %}
      background-color: {{ settings.background_color | default: '#4CAF50' }};
    {% endif %}
    
    /* Pozostałe style */
    color: {{ settings.text_color | default: '#ffffff' }};
    font-size: {{ settings.font_size | default: 14 }}px;
    font-weight: {{ settings.font_weight | default: 600 }};
    border-radius: {{ settings.border_radius | default: 6 }}px;
    
    /* Przezroczystość całego paska */
    {% assign opacity = settings.opacity | default: 100 | divided_by: 100.0 %}
    opacity: {{ opacity }};
    
    /* Ramka */
    {% if settings.border_width and settings.border_width > 0 %}
      border: {{ settings.border_width }}px solid {{ settings.border_color | default: '#cccccc' }};
    {% else %}
      border: none;
    {% endif %}
    
    /* Cień */
    {% if settings.shadow_blur and settings.shadow_blur > 0 %}
      {% assign shadow_opacity = settings.shadow_opacity | default: 20 | divided_by: 100.0 %}
      {% assign shadow_distance = settings.shadow_distance | default: 2 %}
      {% assign shadow_blur = settings.shadow_blur | default: 4 %}
      box-shadow: 0 {{ shadow_distance }}px {{ shadow_blur }}px rgba(0, 0, 0, {{ shadow_opacity }});
    {% else %}
      box-shadow: none;
    {% endif %}
    
    {% if settings.position == 'fixed' %}
      position: fixed;
      margin-top: {{ settings.margin_top }}px;
      left: 50%;
      transform: translateX(-50%);
    {% else %}
      position: absolute;
      z-index: 1;
      margin-top: {{ settings.margin_top }}px;
      left: 50%;
      transform: translateX(-50%);
    {% endif %}
  }
  
  .free-delivery-bar button {
    background: none;
    border: none;
    color: inherit;
    position: absolute;
    top: 8px;
    right: 12px;
    cursor: pointer;
    font-size: 18px;
    padding: 0;
    opacity: 0.8;
    line-height: 1;
  }
  
  .free-delivery-bar button:hover {
    opacity: 1;
  }
  
  .free-delivery-bar.hidden {
    display: none;
  }
</style>

<div class="free-delivery-bar" 
     id="free-delivery-bar"
     data-threshold="{{ settings.min_amount | default: 199 }}"
     data-message="{{ settings.message | default: 'Darmowa dostawa przy zamówieniu powyżej 199 zł!' }}"
     data-success-message="{{ settings.success_message | default: 'Gratulacje! Masz darmową dostawę!' }}"
     data-show-success="{{ settings.show_success_message | default: true }}"
     data-bg-color="{{ settings.background_color | default: '#4CAF50' }}"
     data-width="{{ settings.width | default: 90 }}"
     data-margin-top="{{ settings.margin_top }}"
     data-transparent-bg="{{ settings.transparent_bg }}">
  <span id="delivery-message">
    {% assign message = settings.message | default: "Darmowa dostawa przy zamówieniu powyżej 199 zł!" %}
    {{ message }}
  </span>
  
  {% if settings.closeable == true %}
    <button id="close-delivery-bar">×</button>
  {% endif %}
</div>

<script>
(function() {
  const deliveryBar = document.getElementById('free-delivery-bar');
  const messageElement = document.getElementById('delivery-message');
  const closeButton = document.getElementById('close-delivery-bar');
  
  if (!deliveryBar) {
    console.error('Nie znaleziono elementu free-delivery-bar');
    return;
  }
  
  const threshold = parseInt(deliveryBar.getAttribute('data-threshold'));
  const originalMessage = deliveryBar.getAttribute('data-message');
  const successMessage = deliveryBar.getAttribute('data-success-message'); // 👈 DODANE
  const showSuccess = deliveryBar.getAttribute('data-show-success') !== 'false'; // 👈 DODANE
  const bgColor = deliveryBar.getAttribute('data-bg-color');
  const width = parseInt(deliveryBar.getAttribute('data-width')) || 90;
  const marginTop = parseInt(deliveryBar.getAttribute('data-margin-top'));
  const transparentBg = deliveryBar.getAttribute('data-transparent-bg') === 'true';

  console.log('=== DEBUG KOMUNIKATU SUKCESU ==='); // 👈 DODANE
  console.log('Success message:', successMessage);
  console.log('Show success:', showSuccess);
  
  // USTAW SZEROKOŚĆ I MARGIN DYNAMICZNIE
  deliveryBar.style.setProperty('width', width + '%', 'important');
  deliveryBar.style.setProperty('margin-top', marginTop + 'px', 'important');
  
  // Sprawdź czy pasek był wcześniej zamknięty
  if (localStorage.getItem('deliveryBarClosed') === 'true') {
    deliveryBar.classList.add('hidden');
    return;
  }
  
  // Aktualizuj wiadomość na podstawie wartości koszyka
  function updateDeliveryMessage() {
    fetch('/cart.js')
      .then(response => response.json())
      .then(cart => {
        const cartTotal = cart.total_price / 100;
        
        if (cartTotal >= threshold) {
          // KOMUNIKAT SUKCESU 👈 DODANE
          if (showSuccess && successMessage) {
            messageElement.innerHTML = successMessage;
          } else {
            messageElement.innerHTML = '🎉 Masz darmową dostawę!'; // Fallback
          }
          
          // Zmień kolor na zielony (sukces)
          if (!transparentBg) {
            deliveryBar.style.backgroundColor = '#4CAF50';
          }
        } else {
          // NORMALNA WIADOMOŚĆ
          const remaining = threshold - cartTotal;
          let message = originalMessage;
          
          message = message.replace('{amount}', threshold + ' zł');
          message = message.replace('{remaining}', remaining.toFixed(2) + ' zł');
          
          messageElement.innerHTML = message;
          
          // Przywróć oryginalny kolor
          if (!transparentBg) {
            deliveryBar.style.backgroundColor = bgColor;
          }
        }
      })
      .catch(() => {
        let message = originalMessage.replace('{amount}', threshold + ' zł');
        messageElement.innerHTML = message;
      });
  }
  
  // Obsługa zamknięcia paska
  if (closeButton) {
    closeButton.addEventListener('click', function() {
      deliveryBar.classList.add('hidden');
      localStorage.setItem('deliveryBarClosed', 'true');
    });
  }
  
  updateDeliveryMessage();
  document.addEventListener('cart:updated', updateDeliveryMessage);
  
})();
</script>

{% schema %}
{
  "name": "Free Delivery Bar",
  "target": "section",
  "settings": [
    {
      "type": "paragraph",
      "content": "Wszystkie ustawienia (wiadomość, kolory, pozycja, style) są zarządzane przez panel aplikacji. Ten blok automatycznie pobiera ustawienia z aplikacji."
    },
    {
      "type": "paragraph", 
      "content": "Aby skonfigurować pasek, przejdź do: Apps → Free Delivery → Ustawienia"
    }
  ]
}
{% endschema %}
