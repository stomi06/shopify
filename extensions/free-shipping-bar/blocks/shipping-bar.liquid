<!-- filepath: c:\Users\Micha≈Ç\Desktop\freedelivery\extensions\free-shipping-bar\blocks\shipping-bar.liquid -->
{% schema %}
{
  "name": "Free Shipping Bar",
  "target": "section",
  "settings": [
    {
      "type": "checkbox",
      "id": "enable_bar",
      "label": "W≈ÇƒÖcz pasek darmowej dostawy",
      "default": true
    },
    {
      "type": "select",
      "id": "bar_position",
      "label": "Pozycja paska",
      "options": [
        { "value": "top", "label": "G√≥ra strony" },
        { "value": "under_header", "label": "Pod nag≈Ç√≥wkiem" },
        { "value": "bottom", "label": "D√≥≈Ç strony" }
      ],
      "default": "top"
    }
  ]
}
{% endschema %}

{% if section.settings.enable_bar %}
<div id="free-shipping-bar-container" data-shop="{{ shop.permanent_domain }}" style="display: none;">
  <!-- Pasek bƒôdzie renderowany przez JavaScript -->
</div>

<script>
  // DEBUGGING - tymczasowy alert
  alert('üîß Theme Extension Script Started!');
  
  document.addEventListener('DOMContentLoaded', function() {
    alert('üîß DOM Content Loaded!');
    
    const container = document.getElementById('free-shipping-bar-container');
    const shop = container.getAttribute('data-shop');
    
    console.log('üöÄ Loading Free Shipping Bar for shop:', shop);
    
    // Bezpo≈õrednie ≈ºƒÖdanie do serwera (bypass app-proxy)
    fetch(`https://shopify-ige3.onrender.com/free-delivery/settings?shop=${shop}`, {
      method: 'GET',
      mode: 'cors',
      headers: {
        'Content-Type': 'application/json',
        'Accept': 'application/json'
      }
    })
    .then(response => {
      console.log('üì° Response status:', response.status);
      if (!response.ok) {
        throw new Error(`HTTP ${response.status}`);
      }
      return response.json();
    })
    .then(settings => {
      console.log('‚úÖ Settings loaded:', settings);
      if (settings && settings.active) {
        renderShippingBar(settings);
      } else {
        console.log('‚ÑπÔ∏è Shipping bar is disabled');
      }
    })
    .catch(error => {
      console.error('‚ùå Error loading settings:', error);
      console.log('üîÑ Using fallback settings');
      
      // Fallback - u≈ºyj domy≈õlnych ustawie≈Ñ
      renderShippingBar({
        active: true,
        threshold: 200,
        bar_color: '#4CAF50',
        text_color: '#FFFFFF',
        success_color: '#3f9649',
        message_template: 'Darmowa dostawa od {threshold} z≈Ç! Dodaj produkty za {remaining} z≈Ç.',
        success_message: 'Gratulacje! Masz darmowƒÖ dostawƒô! üéâ',
        loading_message: 'Sprawdzam koszyk...',
        calculate_difference: true,
        show_success_message: true
      });
    });

    function renderShippingBar(settings) {
      console.log('üé® Rendering shipping bar with settings:', settings);
      
      // Konwersja threshold do liczby
      const threshold = parseFloat(settings.threshold) || 200;
      
      // Stw√≥rz pasek
      const bar = document.createElement('div');
      bar.id = 'free-shipping-bar';
      bar.style.cssText = `
        background-color: ${settings.bar_color || '#4CAF50'};
        color: ${settings.text_color || '#FFFFFF'};
        text-align: center;
        padding: 12px 20px;
        font-size: 16px;
        font-weight: 500;
        position: relative;
        z-index: 1000;
        width: 100%;
        box-sizing: border-box;
        line-height: 1.4;
      `;
      
      // Dodaj podstawowƒÖ wiadomo≈õƒá
      bar.innerHTML = `<span id="shipping-message">${settings.loading_message || 'Sprawdzam koszyk...'}</span>`;
      
      // Wstaw pasek do kontenera
      container.appendChild(bar);
      container.style.display = 'block';
      
      console.log('‚úÖ Shipping bar rendered');
      
      // Sprawd≈∫ koszyk i zaktualizuj wiadomo≈õƒá
      updateShippingMessage(settings, threshold);
    }

    function updateShippingMessage(settings, threshold) {
      console.log('üõí Updating shipping message, threshold:', threshold);
      
      // Pobierz warto≈õƒá koszyka
      fetch('/cart.js')
        .then(response => response.json())
        .then(cart => {
          console.log('üõí Cart data:', cart);
          
          const cartTotal = cart.total_price / 100; // Shopify zwraca ceny w groszach
          const remaining = threshold - cartTotal;
          
          console.log(`üí∞ Cart total: ${cartTotal}, Threshold: ${threshold}, Remaining: ${remaining}`);
          
          const messageElement = document.getElementById('shipping-message');
          const barElement = document.getElementById('free-shipping-bar');
          
          if (!messageElement || !barElement) {
            console.error('‚ùå Message or bar element not found');
            return;
          }
          
          if (cartTotal >= threshold) {
            // Darmowa dostawa osiƒÖgniƒôta
            messageElement.textContent = settings.success_message || 'Gratulacje! Masz darmowƒÖ dostawƒô! üéâ';
            barElement.style.backgroundColor = settings.success_color || '#3f9649';
            console.log('üéâ Free shipping achieved!');
          } else {
            // Poka≈º ile jeszcze potrzeba
            if (settings.calculate_difference) {
              const message = (settings.message_template || 'Darmowa dostawa od {threshold} z≈Ç! Dodaj produkty za {remaining} z≈Ç.')
                .replace('{threshold}', threshold.toFixed(0))
                .replace('{remaining}', remaining.toFixed(0));
              messageElement.textContent = message;
            } else {
              const message = (settings.message_template || 'Darmowa dostawa od {threshold} z≈Ç!')
                .replace('{threshold}', threshold.toFixed(0));
              messageElement.textContent = message;
            }
            console.log('üí° Showing shipping progress message');
          }
        })
        .catch(error => {
          console.error('‚ùå Error fetching cart:', error);
          
          // Fallback message
          const messageElement = document.getElementById('shipping-message');
          if (messageElement) {
            const message = (settings.message_template || 'Darmowa dostawa od {threshold} z≈Ç!')
              .replace('{threshold}', threshold.toFixed(0));
            messageElement.textContent = message;
          }
        });
    }

    // Nas≈Çuchuj zmian w koszyku (opcjonalne)
    document.addEventListener('cart:updated', function() {
      console.log('üîÑ Cart updated, refreshing shipping message');
      const container = document.getElementById('free-shipping-bar-container');
      if (container) {
        const settings = JSON.parse(container.getAttribute('data-settings') || '{}');
        const threshold = parseFloat(settings.threshold) || 200;
        updateShippingMessage(settings, threshold);
      }
    });
  });
</script>
{% endif %}